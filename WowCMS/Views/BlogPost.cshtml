@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "default.cshtml";
	var blogRoot = Model.AncestorOrSelf(2);
	IHtmlContent imgSrc = null;
	if (Model.HasProperty("image")) {
		IPublishedContent logo = Model.Value<IPublishedContent>("image");
		if (logo != null) {
			imgSrc = Url.GetCropUrl(logo, width: 1140, quality: 100);
		}
	}
	string[] MonthNames = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
	var title = Model.Value<string>("title");
	var author = Model.Value<string>("author");
	var timestamp = Model.Value<DateTime>("published");
	var formattedTimestamp = MonthNames[timestamp.Month - 1] + " " + timestamp.Day + ", " + timestamp.Year;

	string[] tagList = Model.Value<string[]>("tags");
}
<div class="uk-container-expand site">
    <section class="blog-post" uk-grid>
        <article class="uk-width-1-1 uk-width-2-3@m uk-width-3-4@l">
            <div class="uk-container-expand lt-back">
                <div class="uk-card">
                    <div class="uk-card-media-top" style="background-image: url('@imgSrc');">
                        <ul>
@{ 
	if (tagList != null) {
		foreach (string tag in tagList) {
            var tagUrl = "/blog/?tag=" + Html.UrlEncoder.Encode(tag);
			<li><a href="@tagUrl">@tag</a></li>
		}
	}
}
                        </ul>
                        <h1 class="uk-card-title">@title</h1>
                        <p class="author">@author <span class="timestamp">@formattedTimestamp</span></p>
                    </div>
                    <div class="uk-card-body">
                        @Html.Raw(Model.Value<string>("body"))
                    </div>
                </div>
            </div>
        </article>
        <aside class="blog-links uk-width-1-1 uk-width-1-3@m uk-width-1-4@l">
            <ul>
@{ 
	foreach(IPublishedContent node in blogRoot.Children().OrderBy(x => x.Value<DateTime>("published")).Reverse().Take(10)) {
		var tags = "";
		var linkTitle = node.Value<string>("title");
		var linkTimestamp = node.Value<DateTime>("published");
		var linkFormatted = MonthNames[linkTimestamp.Month - 1] + " " + linkTimestamp.Day + ", " + linkTimestamp.Year;
		var blurb = Html.Raw(node.Value<string>("body").Substring(0, 150));

		IHtmlContent blgSrc = null;
		if (node.HasProperty("image")) {
			IPublishedContent logo = node.Value<IPublishedContent>("image");
			if (logo != null) {
				blgSrc = Url.GetCropUrl(logo, width: 120, height: 120, quality: 100);
			}
		}
        <li>
            <div class="uk-card">
				<div class="uk-card-media-left" style="background-image: url('@blgSrc');">
					<a class="uk-card-title" href="@node.Url()">@title</a>
				</div>
                <div class="uk-card-body">
                    <a class="uk-card-title" href="@node.Url()">@linkTitle</a>
                    <p class="timestamp">@linkFormatted</p>
                </div>
            </div>
        </li>
	}
}
            </ul>
        </aside>
    </section>
</div>