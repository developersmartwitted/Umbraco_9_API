@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{ 
	var root = Model.AncestorOrSelf(1);
	var currentPage = Model.AncestorOrSelf(2);
	var currentSubPage = Model.AncestorOrSelf(3);
	IPublishedContent footer = UmbracoContext.Content.GetByXPath("//footerNavigation").First();
	IEnumerable<IPublishedContent> nodes = footer.Children().Where(x => x.IsPublished() && x.IsDocumentType("section"));
    var sectionCount = nodes.Count();
    var firstSection = sectionCount / 2;
}
<footer>
    <div class="uk-container-expand">
        <div class="uk-child-width-1-2@s uk-child-width-1-3@m uk-child-width-1-1" uk-grid>
            <div class="ftr-section">
@{ 
    // split footer sections in 2 columns
	var sectionComplete = 0;
	foreach (IPublishedContent node in nodes) {
		sectionComplete++;
        if (sectionComplete <= firstSection) {
            var sectionClass = "ftr-" + node.Name.ToLower();
            var title = node.Value<string>("title");
            <article class="@sectionClass uk-card">
                <div class="uk-card-body">
                    <div class="ftr-header uk-card-title">@title</div>
                    <ul class="uk-list uk-list-collapse">
                        @{ 
                            foreach(IPublishedContent subnode in node.Children()) {
                                var subPageLink = subnode.Url();
                                var subPageTitle = subnode.Value<string>("title");
								if (subnode.HasProperty("link") && subnode.HasValue("link")) {
                                    if (subnode.IsDocumentType("internalRedirect")) {
                                        var linkTo = subnode.Value<IPublishedContent>("link");
                                        if (linkTo != null) {
    										subPageLink = linkTo.Url();
                                        }
                                    } else {
                                        subPageLink = subnode.Value<string>("link");
                                    }
								}
                                <li><a href="@subPageLink">@subPageTitle</a></li>
                            }
                        }
                    </ul>
                </div>
            </article>
        }
	}
}
            </div>
            <div class="ftr-section">
@{ 
    // split footer sections in 2 columns
	sectionComplete = 0;
	foreach (IPublishedContent node in nodes) {
		sectionComplete++;
		if (sectionComplete > firstSection) {
			var sectionClass = "ftr-" + node.Name.ToLower();
            <article class="@sectionClass uk-card">
                <div class="uk-card-body">
                    @{ 
                        if (node.Children.Count() > 0) {
                            var title = node.Value<string>("title");
                            <div class="ftr-header uk-card-title">@title</div>
                            <ul class="uk-list uk-list-collapse">
                                @{ 
                                    foreach(IPublishedContent subnode in node.Children()) {
                                        var subPageLink = subnode.Url();
                                        var subPageTitle = subnode.Value<string>("title");
								        if (subnode.HasProperty("link") && subnode.HasValue("link")) {
                                            if (subnode.IsDocumentType("internalRedirect")) {
                                                var linkTo = subnode.Value<IPublishedContent>("link");
                                                if (linkTo != null) {
    											    subPageLink = linkTo.Url();
                                                }
                                            } else {
                                                subPageLink = subnode.Value<string>("link");
                                            }
								        }
                                        <li><a href="@subPageLink">@subPageTitle</a></li>
                                    }
                                }
                            </ul>
					    } else {
						    var pageLink = node.Url();
						    if (node.HasProperty("directLink") && node.HasValue("directLink")) {
                                var linkTo = node.Value<IPublishedContent>("directLink");
                                if (linkTo != null) {
    								pageLink = linkTo.Url();
    							}
						    }
                            var pageTitle = node.Value<string>("title");
                            <div class="ftr-header uk-card-title">
                                <a href="@pageLink">@pageTitle</a>
                            </div>
                            @Html.Raw(node.Value<string>("sectionContent"))
                        }
                    }
                </div>
            </article>
        }
	}
}
            </div>
            <div class="ftr-section">
                <aside>
                    <article class="ftr-social uk-card">
                        <div class="uk-card-body">
                            <div class="ftr-header">
                                <div>
                                    <a href="/">
                                        <img alt="WOWS Global" src="/images/wows-global.png" width="300" height="74">
                                    </a>
                                </div>
                                <p class="uk-card-title">Follow us on</p>
                            </div>
                            <ul>
                                <li>
                                    <a target="_blank" href="https://www.linkedin.com/company/wows-global">
                                        <img src="/images/linkedin-icon.svg" alt="LinkedIn">
                                    </a>
                                </li>
                                <li>
                                    <a target="_blank" href="https://twitter.com/WOWS_Global">
                                        <img src="/images/twitter-icon.svg" alt="Twitter">
                                    </a>
                                </li>
                                <li>
                                    <a target="_blank" href="https://wa.me/66982625600">
                                        <img src="/images/whatsapp-icon.svg" alt="whatsapp">
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </article>
                    <article class="ftr-disclaimer uk-card">
                        <div class="uk-card-body">
                            <div class="ftr-header uk-card-title">Disclaimer:</div>
                            @Html.Raw(footer.Value<string>("disclaimer"))
                        </div>
                    </article>
                </aside>
            </div>
        </div>
        <div class="uk-width-1-1 copyright">&copy;2002 All Rights Reserved.</div>
    </div>
</footer>