@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
	Layout = "default.cshtml";
	IHtmlContent imgSrc = null;
    var title = Model.Value<string>("hmTitle");
    var body = Model.Value<string>("hmBody");
    var hmCTALink = Model.Value<string>("hmCTALink");
    var hmCTA = Model.Value<string>("hmCTA");
    var query = HttpContextAccessor.HttpContext.Request.Query["query"];
    if (Model.HasProperty("hmImage")) {
		IPublishedContent logo = Model.Value<IPublishedContent>("hmImage");
		if (logo != null) {
			imgSrc = Url.GetCropUrl(logo, width: 581, height: 415, quality: 100);
		}
    }
    IEnumerable<IPublishedContent> docs = Model.Children();
    if (!string.IsNullOrEmpty(query)) {
        var cleanQuery = query.ToString().ToLower();
        docs = Model.Children().Where(x => x.Value<string>("title").ToLower().Contains(cleanQuery) ||
            x.Value<string>("blurb").ToLower().Contains(cleanQuery));
    }
}
<div class="uk-container-expand site">
    <section class="themed">
        <article class="dk-graded-back">
            <div class="uk-container-expand uk-child-width-1-2@m uk-child-width-1-1 uk-flex-middle" uk-grid>
                <div class="uk-card">
                    <div class="uk-card-body">
                        <h1 class="uk-card-title">@Html.Raw(title)</h1>
                        <h2>@query</h2>
                        @Html.Raw(body)
                    </div>
@{ 
    if (!string.IsNullOrEmpty(hmCTA)) {
        <div class="uk-card-footer">
            <a href="@hmCTALink" class="btn-primary">
                @hmCTA
            </a>
        </div>
    }
}
                </div>
                <div class="uk-card uk-flex-first uk-flex-last@m">
                    <div class="uk-card-body">
                        <img src="@imgSrc" alt="@title">
                    </div>
                </div>
            </div>
        </article>
    </section>
    <section class="library-list" uk-grid uk-filter="target: .doc-filter">
        <aside class="uk-width-1-1  uk-width-1-4@m">
            <form id="search-form" class="uk-search uk-search-default" method="get">
                <a href="javascript:document.getElementById('search-form').submit();" class="uk-search-icon-flip" uk-search-icon></a>
                <input id="query" name="query" class="uk-search-input" type="search" placeholder="Search" value="@query">
            </form>
            <ul>
                <li uk-filter-control=""><a href="#">All</a></li>
@{ 
	List<string> allTags = new List<string>();
	foreach(IPublishedContent node in docs) {
		string[] nodeTags = node.Value<string[]>("tags");
		if (nodeTags != null) {
			foreach (string tag in nodeTags) {
				if (!allTags.Contains(tag)) {
					allTags.Add(tag);
				}
			}
		}
	}
    allTags.Sort();
    foreach(string tag in allTags) {
        var tagName = ".tag-" + tag.ToLower().Replace(" ", "-");
        <li uk-filter-control="@tagName"><a href="#">@tag</a></li>
    }
}
            </ul>
        </aside>
        <article class="lt-back library uk-width-1-1 uk-width-3-4@m">
            <div class="uk-container-expand">
                <ul class="doc-filter uk-child-width-1-2@s uk-child-width-1-3@l uk-child-width-1-1 uk-grid-match" uk-grid>
@{ 
	var docCount = 0;
	foreach(IPublishedContent node in docs) {
		var tags = "";
		var doctitle = node.Value<string>("title");
		var blurb = node.Value<string>("blurb");
        docCount++;
        var modal = "doc-modal-" + docCount;
		string[] tagList = node.Value<string[]>("tags");
		if (tagList != null) {
			foreach (string tag in tagList) {
				tags += " tag-" + tag.ToLower().Replace(" ", "-");
			}
		}
        var document = node.Value<IPublishedContent>("document");
        var docLink = "#";
        if (document != null) {
    		docLink = document.Url();
        }
		<li class="@tags">
            <div class="uk-card">
                <div class="uk-card-body">
                    <a class="uk-card-title" href="#" uk-toggle>@doctitle</a>
                    <p>@blurb</p>
                    <a href="#@modal" uk-toggle>Read more</a>
                </div>
                <div class="uk-card-footer">
                    <a href="@docLink">Download</a>
                </div>
            </div>
            <div id="@modal" uk-modal>
                <div class="uk-modal-dialog uk-modal-body">
                    <h2 class="uk-modal-title">@doctitle</h2>
                    <p>@blurb</p>
                    <button class="uk-modal-close-default" type="button" uk-close></button>
                </div>
            </div>
        </li>
	}
}
                </ul>
            </div>
        </article>
    </section>
</div>